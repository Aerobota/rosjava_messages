/*
 * Copyright (C) 2011 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */


ext.generatedSourcesDir = "${buildDir}/generated-src"
project.version = project.catkin.packages['@name@'].version 

dependencies {
    compile project(':message_generator')
    project.catkin.packages['@name@'].messageDependencies().each { d ->
        compile project(':' + d)
    }
}

task generateSources(type: JavaExec) {
    outputs.dir file(project.generatedSourcesDir)
    args new ArrayList<String>([generatedSourcesDir,'@name@'])
    classpath = configurations.runtime
    main = 'org.ros.internal.message.GenerateInterfaces'
}

compileJava.source generateSources.outputs.files

eclipse.classpath.file {
  withXml {
    // TODO(damonkohler): Avoid repetition of build directory. This is
    // necessary because Eclipse wants a project relative path.
    it.asNode().appendNode('classpathentry', [kind: 'src', path: 'build/generated-src'])
  }
}
